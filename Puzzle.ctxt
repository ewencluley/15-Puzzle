#BlueJ class context
comment0.target=Puzzle()
comment0.text=\nBuilds\ a\ puzzle\ of\ size\ 4x4\n\n
comment1.params=i\ j
comment1.target=Square\ getSquare(int,\ int)
comment1.text=\nReturns\ the\ square\ object\ from\ the\ specific\ possition\ in\ the\ grid.\n@param\ i\ int\ for\ the\ row\ number\n@param\ j\ int\ for\ column\ number\n@return\ Square\ the\ square\ found\ at\ that\ location.\n\n
comment10.target=void\ setCost()
comment10.text=\nsets\ the\ cost\ variable\ withint\ he\ puzzle\ object\n\n
comment11.target=int\ calculateManhattan()
comment11.text=\nCalculates\ the\ cost\ of\ the\ puzzle\ state\ using\ Manhattan\ Distance\n\n
comment12.target=int\ getCost()
comment12.text=\nreturns\ the\ cost\ of\ the\ state\ from\ the\ goal\ state.\n@return\ int\ the\ cost\ of\ the\ state\n\n
comment13.target=int\ calculateMisplacedTiles()
comment13.text=\nCalculates\ the\ number\ of\ tiles\ in\ incorrect\ possitions\ in\ the\ grid.\n@return\ int\ number\ of\ misplaced\ tiles\n\n
comment14.target=void\ fillPuzzle()
comment14.text=\nFills\ a\ pre-defined\ Puzzle\n\n1\ \ \ \ 2\ \ \ \ 3\ \ \ \ 4\ \n5\ \ \ \ 6\ \ \ \ 7\ \ \ \ 8\ \n9\ \ 10\ \ 11\ \ 12\ \n13\ \ 14\ \ \ \ \ \ \ \ \ \ 15\ \ \n\n\n
comment15.target=void\ fillGoal()
comment15.text=\nFills\ the\ goal\ state\ into\ the\ puzzle\ object.\n\n
comment16.target=void\ fillPuzzle2()
comment16.text=\nFills\ a\ pre-defined\ Puzzle\n\n2\ \ \ \ \ \ \ \ 3\ \ \ 4\ \n1\ \ \ 5\ \ \ 7\ \ \ 8\ \n9\ \ \ 6\ \ 10\ \ 11\ \n13\ \ 14\ \ 15\ \ 12\ \n\n
comment2.params=sX\ sY
comment2.target=boolean\ moveSquare(int,\ int)
comment2.text=\nMoves\ a\ square\ into\ the\ empty\ space\ on\ the\ grid.\ \ \nIf\ the\ square\ cannot\ be\ moved,\ e.g.\ it\ is\ not\ surrounded\ by\ an\ empty\ place,\ the\ function\ returns\ false.\n@param\ row\ defines\ the\ row\ of\ the\ tile\ to\ move\n@param\ column\ defines\ the\ column\ of\ the\ tile\ to\ move\n\n
comment3.params=p
comment3.target=void\ setPredecessor(Puzzle)
comment3.text=\nsets\ the\ predecessor\ of\ the\ puzzle\ state\ during\ the\ search.\n@param\ p\ a\ Puzzle\ object\ which\ created\ this\ one\ (it's\ parent)\n\n
comment4.target=Puzzle\ getPredecessor()
comment4.text=\ngets\ the\ predecessor\ of\ the\ puzzle\ state\ during\ the\ search.\n@return\ Puzzle\ object\ which\ created\ this\ one\ (it's\ parent)\n\n
comment5.target=void\ print()
comment5.text=\nPrints\ the\ puzzle\ out\ to\ the\ terminal.\n\n
comment6.target=Object\ clone()
comment6.text=\nUsed\ to\ create\ a\ bit\ copy\ of\ the\ object.\ \n@return\ Object\ the\ cloned\ object.\n\n
comment7.target=ArrayList<Puzzle>\ getDaughters()
comment7.text=\ngets\ the\ daughter\ states\ of\ the\ puzzle\ state\n@return\ ArrayList<Puzzle>\ of\ puzzle\ objects\ representing\ the\ possible\ moves\ from\ the\ current\ state..\n\n
comment8.params=o
comment8.target=boolean\ equals(Object)
comment8.text=\ncompares\ 2\ Puzzle\ objects\ to\ see\ if\ they\ are\ equivalent.\ \ This\ will\ be\ true\ if\ the\ grid\ has\ the\ same\ configuration\ of\ squares.\n@return\ boolean\ true\ if\ the\ objects\ are\ equal,\ otherwise\ false.\n\n
comment9.target=int\ hashCode()
comment9.text=\nreturns\ the\ redefined\ Hashcode\ \n@returns\ int\ the\ objects\ Hash\ Cose.\n\n
numComments=17
